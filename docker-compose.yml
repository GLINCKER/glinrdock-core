# Docker Compose for GLINRDOCK
# Demonstrates secure deployment with read-only filesystem
version: '3.8'

services:
  nginx-proxy:
    image: nginx:1.25-alpine
    container_name: glinrdock-nginx-proxy
    profiles:
      - dev
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./.var/nginx/conf:/etc/nginx/conf.d:ro
      - ./.var/nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - glinrdock
    restart: unless-stopped

  glinrdock:
    build:
      context: .
      dockerfile: Dockerfile.controller
      args:
        - VERSION=${VERSION:-dev}
        - COMMIT=${COMMIT:-local}
    image: ghcr.io/glincker/glinrdock:${VERSION:-dev}
    container_name: glinrdock-controller
    restart: unless-stopped
    
    # Security settings
    read_only: true
    user: "65532:65532"  # nobody user
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE  # For binding to port 8080
    
    # Networking
    ports:
      - "${HTTP_PORT:-8080}:8080"
    
    # Environment variables
    environment:
      - DATA_DIR=/app/data
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - ADMIN_TOKEN=${ADMIN_TOKEN:-}
      - GLINRDOCK_CORS_ORIGINS=${CORS_ORIGINS:-}
      - NGINX_PROXY_ENABLED=${NGINX_PROXY_ENABLED:-false}
      
    # Volumes (tmpfs for writable directories)
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=100m
      - /app/data:rw,size=500m
      - /app/logs:rw,size=100m
      
    # Optional: persistent storage (comment out tmpfs above if using)
    volumes:
      - glinrdock-data:/app/data
      - glinrdock-logs:/app/logs
      
    # Health check via external probe (since distroless has no shell)
    healthcheck:
      test: ["NONE"]  # Disabled - use external health checks
      
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 128M
          cpus: '0.1'

# Optional persistent volumes (uncomment if not using tmpfs)
volumes:
  glinrdock-data:
    driver: local
  glinrdock-logs:
    driver: local

# Networks
networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1500