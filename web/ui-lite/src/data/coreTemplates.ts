// Core templates - hardcoded popular services that work offline
// These are the essential services that should always be available

import { EnhancedServiceTemplate } from "../utils/dockerRegistry";

export const CORE_TEMPLATES: EnhancedServiceTemplate[] = [
  // === DATABASES ===
  {
    id: "postgresql",
    name: "postgresql",
    displayName: "PostgreSQL",
    description:
      "Advanced open source relational database with excellent performance and reliability",
    baseImage: "postgres", // No version - will be resolved dynamically
    category: "database",
    iconKey: "postgresql",
    defaultPort: 5432,
    defaultEnv: {
      POSTGRES_DB: "myapp",
      POSTGRES_USER: "admin",
      POSTGRES_PASSWORD: "secure_password",
    },
    documentation: "https://www.postgresql.org/docs/",
    tags: ["database", "sql", "relational", "acid"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "mysql",
    name: "mysql",
    displayName: "MySQL",
    description: "World's most popular open source relational database",
    baseImage: "mysql",
    category: "database",
    iconKey: "mysql",
    defaultPort: 3306,
    defaultEnv: {
      MYSQL_ROOT_PASSWORD: "rootpassword",
      MYSQL_DATABASE: "myapp",
      MYSQL_USER: "admin",
      MYSQL_PASSWORD: "secure_password",
    },
    documentation: "https://dev.mysql.com/doc/",
    tags: ["database", "sql", "relational"],
    popular: true,
    complexity: "beginner",
  },
  {
    id: "mongodb",
    name: "mongodb",
    displayName: "MongoDB",
    description: "Document-based NoSQL database for modern applications",
    baseImage: "mongo",
    category: "database",
    iconKey: "mongodb",
    defaultPort: 27017,
    defaultEnv: {
      MONGO_INITDB_ROOT_USERNAME: "admin",
      MONGO_INITDB_ROOT_PASSWORD: "secure_password",
      MONGO_INITDB_DATABASE: "myapp",
    },
    documentation: "https://docs.mongodb.com/",
    tags: ["database", "nosql", "document"],
    popular: true,
    complexity: "beginner",
  },

  // Cache
  {
    id: "redis",
    name: "redis",
    displayName: "Redis",
    description:
      "In-memory data structure store - cache, database, and message broker",
    baseImage: "redis",
    category: "cache",
    iconKey: "redis",
    defaultPort: 6379,
    defaultEnv: {},
    documentation: "https://redis.io/docs/",
    tags: ["cache", "memory", "key-value"],
    popular: true,
    complexity: "beginner",
  },

  // Web Servers
  {
    id: "nginx",
    name: "nginx",
    displayName: "Nginx",
    description:
      "High-performance web server, reverse proxy, and load balancer",
    baseImage: "nginx",
    category: "web",
    iconKey: "nginx",
    defaultPort: 80,
    defaultEnv: {},
    documentation: "https://nginx.org/en/docs/",
    tags: ["web", "proxy", "server"],
    popular: true,
    complexity: "intermediate",
  },

  // Development Runtimes
  {
    id: "nodejs",
    name: "nodejs",
    displayName: "Node.js",
    description: "JavaScript runtime built on Chrome's V8 JavaScript engine",
    baseImage: "node",
    category: "development",
    iconKey: "nodedotjs",
    defaultPort: 3000,
    defaultEnv: {
      NODE_ENV: "development",
    },
    documentation: "https://nodejs.org/en/docs/",
    tags: ["development", "javascript", "runtime"],
    popular: true,
    complexity: "beginner",
  },
  {
    id: "python",
    name: "python",
    displayName: "Python",
    description: "Python runtime for applications, scripts, and data science",
    baseImage: "python",
    category: "development",
    iconKey: "python",
    defaultPort: 8000,
    defaultEnv: {
      PYTHONUNBUFFERED: "1",
    },
    documentation: "https://docs.python.org/",
    tags: ["development", "python", "scripting"],
    popular: true,
    complexity: "beginner",
  },
  {
    id: "openjdk",
    name: "openjdk",
    displayName: "OpenJDK (Java)",
    description: "OpenJDK Java runtime for enterprise applications",
    baseImage: "openjdk",
    category: "development",
    iconKey: "java",
    defaultPort: 8080,
    defaultEnv: {
      JAVA_OPTS: "-Xmx512m",
    },
    documentation: "https://openjdk.org/guide/",
    tags: ["development", "java", "jvm"],
    popular: true,
    complexity: "intermediate",
  },

  // Message Queues
  {
    id: "rabbitmq",
    name: "rabbitmq",
    displayName: "RabbitMQ",
    description:
      "Reliable message broker supporting multiple messaging protocols",
    baseImage: "rabbitmq",
    category: "message",
    iconKey: "rabbitmq",
    defaultPort: 5672,
    additionalPorts: [15672], // Management UI
    defaultEnv: {
      RABBITMQ_DEFAULT_USER: "admin",
      RABBITMQ_DEFAULT_PASS: "secure_password",
    },
    documentation: "https://www.rabbitmq.com/documentation.html",
    tags: ["messaging", "queue", "amqp"],
    popular: true,
    complexity: "intermediate",
  },

  // Search & Analytics
  {
    id: "elasticsearch",
    name: "elasticsearch",
    displayName: "Elasticsearch",
    description:
      "Distributed search and analytics engine built on Apache Lucene",
    baseImage: "docker.elastic.co/elasticsearch/elasticsearch",
    category: "database",
    iconKey: "elasticsearch",
    defaultPort: 9200,
    defaultEnv: {
      "discovery.type": "single-node",
      "xpack.security.enabled": "false",
    },
    documentation:
      "https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html",
    tags: ["search", "analytics", "database"],
    popular: true,
    complexity: "advanced",
  },

  // === MORE DATABASES ===
  {
    id: "mariadb",
    name: "mariadb",
    displayName: "MariaDB",
    description: "MySQL-compatible database server with enhanced features",
    baseImage: "mariadb",
    category: "database",
    iconKey: "mysql", // Using MySQL icon as fallback
    defaultPort: 3306,
    defaultEnv: {
      MARIADB_ROOT_PASSWORD: "rootpassword",
      MARIADB_DATABASE: "myapp",
      MARIADB_USER: "admin",
      MARIADB_PASSWORD: "secure_password",
    },
    documentation: "https://mariadb.org/documentation/",
    tags: ["database", "sql", "mysql-compatible"],
    popular: true,
    complexity: "beginner",
  },
  {
    id: "influxdb",
    name: "influxdb",
    displayName: "InfluxDB",
    description: "Time series database designed for IoT and monitoring",
    baseImage: "influxdb",
    category: "database",
    iconKey: "database",
    defaultPort: 8086,
    defaultEnv: {
      INFLUXDB_DB: "myapp",
      INFLUXDB_ADMIN_USER: "admin",
      INFLUXDB_ADMIN_PASSWORD: "secure_password",
    },
    documentation: "https://docs.influxdata.com/influxdb/",
    tags: ["database", "timeseries", "iot", "metrics"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "cassandra",
    name: "cassandra",
    displayName: "Apache Cassandra",
    description: "Highly scalable NoSQL database for big data",
    baseImage: "cassandra",
    category: "database",
    iconKey: "database",
    defaultPort: 9042,
    defaultEnv: {
      CASSANDRA_CLUSTER_NAME: "MyCluster",
    },
    documentation: "https://cassandra.apache.org/doc/",
    tags: ["database", "nosql", "distributed", "big-data"],
    popular: true,
    complexity: "advanced",
  },
  {
    id: "couchdb",
    name: "couchdb",
    displayName: "Apache CouchDB",
    description: "Document database with HTTP API and replication",
    baseImage: "couchdb",
    category: "database",
    iconKey: "database",
    defaultPort: 5984,
    defaultEnv: {
      COUCHDB_USER: "admin",
      COUCHDB_PASSWORD: "secure_password",
    },
    documentation: "https://docs.couchdb.org/",
    tags: ["database", "nosql", "document", "http-api"],
    popular: false,
    complexity: "intermediate",
  },

  // === CACHE & MEMORY STORES ===

  // === WEB SERVERS & PROXIES ===
  {
    id: "apache",
    name: "apache",
    displayName: "Apache HTTP Server",
    description: "World's most used web server software",
    baseImage: "httpd",
    category: "web",
    iconKey: "apache",
    defaultPort: 80,
    defaultEnv: {},
    documentation: "https://httpd.apache.org/docs/",
    tags: ["web", "server", "http"],
    popular: true,
    complexity: "beginner",
  },
  {
    id: "haproxy",
    name: "haproxy",
    displayName: "HAProxy",
    description: "Reliable, high performance load balancer",
    baseImage: "haproxy",
    category: "web",
    iconKey: "web",
    defaultPort: 80,
    additionalPorts: [8080],
    defaultEnv: {},
    documentation: "http://www.haproxy.org/#docs",
    tags: ["proxy", "load-balancer", "performance"],
    popular: true,
    complexity: "intermediate",
  },

  // === MESSAGE QUEUES & STREAMING ===
  {
    id: "kafka",
    name: "kafka",
    displayName: "Apache Kafka",
    description:
      "Distributed event streaming platform for high-throughput data pipelines",
    baseImage: "confluentinc/cp-kafka",
    category: "streaming",
    iconKey: "kafka",
    defaultPort: 9092,
    defaultEnv: {
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181",
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092",
    },
    documentation: "https://kafka.apache.org/documentation/",
    tags: ["streaming", "events", "distributed", "big-data"],
    popular: true,
    complexity: "advanced",
  },
  {
    id: "nats",
    name: "nats",
    displayName: "NATS",
    description: "High performance cloud native messaging system",
    baseImage: "nats",
    category: "message",
    iconKey: "message",
    defaultPort: 4222,
    additionalPorts: [8222], // Monitoring port
    defaultEnv: {},
    documentation: "https://docs.nats.io/",
    tags: ["messaging", "cloud-native", "performance"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "activemq",
    name: "activemq",
    displayName: "Apache ActiveMQ",
    description: "Powerful open source messaging broker",
    baseImage: "rmohr/activemq",
    category: "message",
    iconKey: "message",
    defaultPort: 61616,
    additionalPorts: [8161], // Web console
    defaultEnv: {},
    documentation: "https://activemq.apache.org/getting-started",
    tags: ["messaging", "jms", "broker"],
    popular: true,
    complexity: "intermediate",
  },

  // === DEVELOPMENT RUNTIMES ===
  {
    id: "golang",
    name: "golang",
    displayName: "Go",
    description: "Go programming language runtime",
    baseImage: "golang",
    category: "development",
    iconKey: "go",
    defaultPort: 8080,
    defaultEnv: {
      CGO_ENABLED: "0",
    },
    documentation: "https://golang.org/doc/",
    tags: ["development", "golang", "runtime"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "php",
    name: "php",
    displayName: "PHP",
    description: "PHP runtime for web applications",
    baseImage: "php",
    category: "development",
    iconKey: "php",
    defaultPort: 9000,
    defaultEnv: {},
    documentation: "https://www.php.net/docs.php",
    tags: ["development", "php", "web"],
    popular: true,
    complexity: "beginner",
  },
  {
    id: "ruby",
    name: "ruby",
    displayName: "Ruby",
    description: "Ruby programming language runtime",
    baseImage: "ruby",
    category: "development",
    iconKey: "ruby",
    defaultPort: 3000,
    defaultEnv: {},
    documentation: "https://ruby-doc.org/",
    tags: ["development", "ruby", "rails"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "dotnet",
    name: "dotnet",
    displayName: ".NET Core",
    description: "Cross-platform .NET runtime",
    baseImage: "mcr.microsoft.com/dotnet/runtime",
    category: "development",
    iconKey: "microsoft",
    defaultPort: 5000,
    defaultEnv: {
      ASPNETCORE_ENVIRONMENT: "Development",
    },
    documentation: "https://docs.microsoft.com/dotnet/",
    tags: ["development", "dotnet", "microsoft", "csharp"],
    popular: true,
    complexity: "intermediate",
  },

  // === MONITORING & OBSERVABILITY ===
  {
    id: "grafana",
    name: "grafana",
    displayName: "Grafana",
    description: "Analytics and monitoring platform with beautiful dashboards",
    baseImage: "grafana/grafana",
    category: "monitoring",
    iconKey: "grafana",
    defaultPort: 3000,
    defaultEnv: {
      GF_SECURITY_ADMIN_PASSWORD: "admin",
    },
    documentation: "https://grafana.com/docs/",
    tags: ["monitoring", "analytics", "dashboards"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "prometheus",
    name: "prometheus",
    displayName: "Prometheus",
    description: "Monitoring system and time series database",
    baseImage: "prom/prometheus",
    category: "monitoring",
    iconKey: "monitoring",
    defaultPort: 9090,
    defaultEnv: {},
    documentation: "https://prometheus.io/docs/",
    tags: ["monitoring", "metrics", "timeseries"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "jaeger",
    name: "jaeger",
    displayName: "Jaeger",
    description: "Distributed tracing platform",
    baseImage: "jaegertracing/all-in-one",
    category: "monitoring",
    iconKey: "monitoring",
    defaultPort: 16686,
    additionalPorts: [14268], // Collector port
    defaultEnv: {},
    documentation: "https://www.jaegertracing.io/docs/",
    tags: ["monitoring", "tracing", "distributed"],
    popular: true,
    complexity: "advanced",
  },
  {
    id: "zipkin",
    name: "zipkin",
    displayName: "Zipkin",
    description: "Distributed tracing system",
    baseImage: "openzipkin/zipkin",
    category: "monitoring",
    iconKey: "monitoring",
    defaultPort: 9411,
    defaultEnv: {},
    documentation: "https://zipkin.io/",
    tags: ["monitoring", "tracing", "distributed"],
    popular: false,
    complexity: "intermediate",
  },

  // === STORAGE & FILE SYSTEMS ===
  {
    id: "minio",
    name: "minio",
    displayName: "MinIO",
    description: "High performance object storage compatible with Amazon S3",
    baseImage: "minio/minio",
    category: "storage",
    iconKey: "minio",
    defaultPort: 9000,
    additionalPorts: [9001], // Console
    defaultEnv: {
      MINIO_ROOT_USER: "minioadmin",
      MINIO_ROOT_PASSWORD: "minioadmin",
    },
    documentation: "https://docs.min.io/",
    tags: ["storage", "s3", "object-storage"],
    popular: true,
    complexity: "intermediate",
  },

  // === DEVELOPMENT TOOLS ===
  {
    id: "jenkins",
    name: "jenkins",
    displayName: "Jenkins",
    description: "Automation server for CI/CD pipelines",
    baseImage: "jenkins/jenkins",
    category: "development",
    iconKey: "jenkins",
    defaultPort: 8080,
    additionalPorts: [50000], // Agent port
    defaultEnv: {},
    documentation: "https://www.jenkins.io/doc/",
    tags: ["ci-cd", "automation", "development"],
    popular: true,
    complexity: "intermediate",
  },

  // === ADDITIONAL POPULAR SERVICES ===
  {
    id: "mailhog",
    name: "mailhog",
    displayName: "MailHog",
    description: "Email testing tool for developers",
    baseImage: "mailhog/mailhog",
    category: "development",
    iconKey: "mail",
    defaultPort: 8025,
    additionalPorts: [1025], // SMTP port
    defaultEnv: {},
    documentation: "https://github.com/mailhog/MailHog",
    tags: ["email", "testing", "development"],
    popular: true,
    complexity: "beginner",
  },
  // Additional 40 Popular Services
  {
    id: "memcached",
    name: "memcached",
    displayName: "Memcached",
    description: "High-performance, distributed memory object caching system",
    baseImage: "memcached",
    category: "cache",
    iconKey: "memcached",
    defaultPort: 11211,
    defaultEnv: {},
    documentation: "https://memcached.org/tutorial",
    tags: ["cache", "memory", "performance"],
    popular: true,
    complexity: "beginner",
  },
  {
    id: "hazelcast",
    name: "hazelcast",
    displayName: "Hazelcast",
    description:
      "In-memory computing platform with distributed data structures",
    baseImage: "hazelcast/hazelcast",
    category: "cache",
    iconKey: "hazelcast",
    defaultPort: 5701,
    defaultEnv: {},
    documentation: "https://docs.hazelcast.com/hazelcast/latest/",
    tags: ["cache", "distributed", "java"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "traefik",
    name: "traefik",
    displayName: "Traefik",
    description: "Modern HTTP reverse proxy and load balancer",
    baseImage: "traefik",
    category: "web",
    iconKey: "traefik",
    defaultPort: 80,
    additionalPorts: [8080], // Admin dashboard
    defaultEnv: {},
    documentation: "https://doc.traefik.io/traefik/",
    tags: ["proxy", "load-balancer", "routing"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "caddy",
    name: "caddy",
    displayName: "Caddy",
    description: "Fast, multi-platform web server with automatic HTTPS",
    baseImage: "caddy",
    category: "web",
    iconKey: "caddy",
    defaultPort: 80,
    additionalPorts: [443], // HTTPS
    defaultEnv: {},
    documentation: "https://caddyserver.com/docs/",
    tags: ["web-server", "https", "reverse-proxy"],
    popular: true,
    complexity: "beginner",
  },
  {
    id: "sonarqubecloud",
    name: "sonarqubecloud",
    displayName: "SonarQube",
    description: "Code quality and security analysis platform",
    baseImage: "sonarqubecloud",
    category: "development",
    iconKey: "sonarqube",
    defaultPort: 9000,
    defaultEnv: {
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true",
    },
    documentation: "https://docs.sonarqube.org/",
    tags: ["code-quality", "static-analysis", "security"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "vault",
    name: "vault",
    displayName: "HashiCorp Vault",
    description:
      "Secure, store and tightly control access to tokens and secrets",
    baseImage: "vault",
    category: "security",
    iconKey: "vault",
    defaultPort: 8200,
    defaultEnv: {
      VAULT_DEV_ROOT_TOKEN_ID: "myroot",
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200",
    },
    documentation: "https://learn.hashicorp.com/vault/",
    tags: ["security", "secrets", "hashicorp"],
    popular: true,
    complexity: "advanced",
  },
  {
    id: "consul",
    name: "consul",
    displayName: "HashiCorp Consul",
    description:
      "Service mesh solution providing service discovery and configuration",
    baseImage: "consul",
    category: "networking",
    iconKey: "consul",
    defaultPort: 8500,
    defaultEnv: {},
    documentation: "https://learn.hashicorp.com/consul/",
    tags: ["service-discovery", "service-mesh", "hashicorp"],
    popular: true,
    complexity: "advanced",
  },
  {
    id: "etcd",
    name: "etcd",
    displayName: "etcd",
    description: "Distributed, reliable key-value store for critical data",
    baseImage: "quay.io/coreos/etcd",
    category: "database",
    iconKey: "etcd",
    defaultPort: 2379,
    additionalPorts: [2380], // Peer communication
    defaultEnv: {},
    documentation: "https://etcd.io/docs/",
    tags: ["key-value", "distributed", "kubernetes"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "zookeeper",
    name: "zookeeper",
    displayName: "Apache ZooKeeper",
    description:
      "Centralized service for maintaining configuration information",
    baseImage: "zookeeper",
    category: "messaging",
    iconKey: "apachezookeeper",
    defaultPort: 2181,
    defaultEnv: {},
    documentation: "https://zookeeper.apache.org/doc/",
    tags: ["coordination", "distributed", "apache"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "portainer",
    name: "portainer",
    displayName: "Portainer",
    description: "Lightweight management UI for Docker environments",
    baseImage: "portainer/portainer-ce",
    category: "development",
    iconKey: "portainer",
    defaultPort: 9000,
    defaultEnv: {},
    documentation: "https://documentation.portainer.io/",
    tags: ["docker", "management", "ui"],
    popular: true,
    complexity: "beginner",
  },
  {
    id: "adminer",
    name: "adminer",
    displayName: "Adminer",
    description: "Full-featured database management tool written in PHP",
    baseImage: "adminer",
    category: "development",
    iconKey: "adminer",
    defaultPort: 8080,
    defaultEnv: {},
    documentation: "https://www.adminer.org/",
    tags: ["database", "admin", "php"],
    popular: true,
    complexity: "beginner",
  },
  {
    id: "phpmyadmin",
    name: "phpmyadmin",
    displayName: "phpMyAdmin",
    description: "Web interface for MySQL and MariaDB administration",
    baseImage: "phpmyadmin",
    category: "development",
    iconKey: "phpmyadmin",
    defaultPort: 80,
    defaultEnv: {
      PMA_ARBITRARY: "1",
    },
    documentation: "https://docs.phpmyadmin.net/",
    tags: ["mysql", "admin", "web"],
    popular: true,
    complexity: "beginner",
  },
  {
    id: "wordpress",
    name: "wordpress",
    displayName: "WordPress",
    description: "Popular open-source content management system",
    baseImage: "wordpress",
    category: "web",
    iconKey: "wordpress",
    defaultPort: 80,
    defaultEnv: {
      WORDPRESS_DB_HOST: "mysql:3306",
      WORDPRESS_DB_NAME: "wordpress",
    },
    documentation: "https://wordpress.org/support/",
    tags: ["cms", "blog", "php"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "ghost",
    name: "ghost",
    displayName: "Ghost",
    description: "Modern publishing platform for blogs and publications",
    baseImage: "ghost",
    category: "web",
    iconKey: "ghost",
    defaultPort: 2368,
    defaultEnv: {
      NODE_ENV: "development",
    },
    documentation: "https://ghost.org/docs/",
    tags: ["blog", "cms", "nodejs"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "drupal",
    name: "drupal",
    displayName: "Drupal",
    description: "Open-source content management platform",
    baseImage: "drupal",
    category: "web",
    iconKey: "drupal",
    defaultPort: 80,
    defaultEnv: {},
    documentation: "https://www.drupal.org/docs/",
    tags: ["cms", "php", "web"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "joomla",
    name: "joomla",
    displayName: "Joomla",
    description: "Award-winning content management system",
    baseImage: "joomla",
    category: "web",
    iconKey: "joomla",
    defaultPort: 80,
    defaultEnv: {},
    documentation: "https://docs.joomla.org/",
    tags: ["cms", "php", "web"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "nextcloud",
    name: "nextcloud",
    displayName: "Nextcloud",
    description: "Self-hosted productivity platform and file sync",
    baseImage: "nextcloud",
    category: "storage",
    iconKey: "nextcloud",
    defaultPort: 80,
    defaultEnv: {},
    documentation: "https://docs.nextcloud.com/",
    tags: ["cloud", "file-sync", "collaboration"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "owncloud",
    name: "owncloud",
    displayName: "ownCloud",
    description: "Self-hosted file sync and share solution",
    baseImage: "owncloud/server",
    category: "storage",
    iconKey: "owncloud",
    defaultPort: 8080,
    defaultEnv: {},
    documentation: "https://doc.owncloud.com/",
    tags: ["cloud", "file-sync", "storage"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "seafile",
    name: "seafile",
    displayName: "Seafile",
    description: "High performance file syncing and sharing platform",
    baseImage: "seafileltd/seafile-mc",
    category: "storage",
    iconKey: "seafile",
    defaultPort: 80,
    defaultEnv: {},
    documentation: "https://manual.seafile.com/",
    tags: ["file-sync", "storage", "collaboration"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "gitea",
    name: "gitea",
    displayName: "Gitea",
    description: "Lightweight Git service written in Go",
    baseImage: "gitea/gitea",
    category: "development",
    iconKey: "gitea",
    defaultPort: 3000,
    additionalPorts: [22], // SSH
    defaultEnv: {},
    documentation: "https://docs.gitea.io/",
    tags: ["git", "version-control", "golang"],
    popular: true,
    complexity: "beginner",
  },
  {
    id: "gitlab",
    name: "gitlab",
    displayName: "GitLab",
    description: "Complete DevOps platform with Git repository management",
    baseImage: "gitlab/gitlab-ce",
    category: "development",
    iconKey: "gitlab",
    defaultPort: 80,
    additionalPorts: [443, 22], // HTTPS, SSH
    defaultEnv: {},
    documentation: "https://docs.gitlab.com/",
    tags: ["git", "devops", "ci-cd"],
    popular: true,
    complexity: "advanced",
  },
  {
    id: "keycloak",
    name: "keycloak",
    displayName: "Keycloak",
    description: "Open source identity and access management solution",
    baseImage: "quay.io/keycloak/keycloak",
    category: "security",
    iconKey: "keycloak",
    defaultPort: 8080,
    defaultEnv: {
      KEYCLOAK_ADMIN: "admin",
      KEYCLOAK_ADMIN_PASSWORD: "admin",
    },
    documentation: "https://www.keycloak.org/documentation",
    tags: ["authentication", "sso", "oauth"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "authentik",
    name: "authentik",
    displayName: "authentik",
    description: "The authentication glue you need",
    baseImage: "ghcr.io/goauthentik/server",
    category: "security",
    iconKey: "authentik",
    defaultPort: 9000,
    defaultEnv: {},
    documentation: "https://goauthentik.io/docs/",
    tags: ["authentication", "sso", "identity"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "wireguard",
    name: "wireguard",
    displayName: "WireGuard",
    description: "Fast, modern, secure VPN tunnel",
    baseImage: "linuxserver/wireguard",
    category: "networking",
    iconKey: "wireguard",
    defaultPort: 51820,
    defaultEnv: {
      PUID: "1000",
      PGID: "1000",
    },
    documentation: "https://www.wireguard.com/",
    tags: ["vpn", "security", "networking"],
    popular: true,
    complexity: "advanced",
  },
  {
    id: "openvpn",
    name: "openvpn",
    displayName: "OpenVPN",
    description: "Robust and highly flexible VPN daemon",
    baseImage: "kylemanna/openvpn",
    category: "networking",
    iconKey: "openvpn",
    defaultPort: 1194,
    defaultEnv: {},
    documentation: "https://openvpn.net/community-resources/",
    tags: ["vpn", "security", "networking"],
    popular: true,
    complexity: "advanced",
  },
  {
    id: "pihole",
    name: "pihole",
    displayName: "Pi-hole",
    description: "Network-wide ad blocker and DNS sinkhole",
    baseImage: "pihole/pihole",
    category: "networking",
    iconKey: "pihole",
    defaultPort: 80,
    additionalPorts: [53], // DNS
    defaultEnv: {
      WEBPASSWORD: "admin",
    },
    documentation: "https://docs.pi-hole.net/",
    tags: ["dns", "ad-blocker", "networking"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "unbound",
    name: "unbound",
    displayName: "Unbound",
    description: "Validating, recursive, caching DNS resolver",
    baseImage: "mvance/unbound",
    category: "networking",
    iconKey: "dns",
    defaultPort: 53,
    defaultEnv: {},
    documentation: "https://unbound.docs.nlnetlabs.nl/",
    tags: ["dns", "resolver", "security"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "bind9",
    name: "bind9",
    displayName: "BIND 9",
    description: "The most widely used name server software",
    baseImage: "internetsystemsconsortium/bind9",
    category: "networking",
    iconKey: "dns",
    defaultPort: 53,
    defaultEnv: {},
    documentation: "https://bind9.readthedocs.io/",
    tags: ["dns", "nameserver", "networking"],
    popular: true,
    complexity: "advanced",
  },
  {
    id: "transmission",
    name: "transmission",
    displayName: "Transmission",
    description: "Fast, easy, and free BitTorrent client",
    baseImage: "linuxserver/transmission",
    category: "storage",
    iconKey: "transmission",
    defaultPort: 9091,
    defaultEnv: {
      PUID: "1000",
      PGID: "1000",
    },
    documentation: "https://transmissionbt.com/",
    tags: ["torrent", "download", "p2p"],
    popular: true,
    complexity: "beginner",
  },
  {
    id: "qbittorrent",
    name: "qbittorrent",
    displayName: "qBittorrent",
    description: "Free and reliable P2P BitTorrent client",
    baseImage: "linuxserver/qbittorrent",
    category: "storage",
    iconKey: "qbittorrent",
    defaultPort: 8080,
    defaultEnv: {
      PUID: "1000",
      PGID: "1000",
    },
    documentation: "https://www.qbittorrent.org/",
    tags: ["torrent", "download", "p2p"],
    popular: true,
    complexity: "beginner",
  },
  {
    id: "deluge",
    name: "deluge",
    displayName: "Deluge",
    description: "Lightweight, cross-platform BitTorrent client",
    baseImage: "linuxserver/deluge",
    category: "storage",
    iconKey: "deluge",
    defaultPort: 8112,
    defaultEnv: {
      PUID: "1000",
      PGID: "1000",
    },
    documentation: "https://deluge-torrent.org/",
    tags: ["torrent", "download", "python"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "jackett",
    name: "jackett",
    displayName: "Jackett",
    description: "API support for torrent trackers",
    baseImage: "linuxserver/jackett",
    category: "storage",
    iconKey: "jackett",
    defaultPort: 9117,
    defaultEnv: {
      PUID: "1000",
      PGID: "1000",
    },
    documentation: "https://github.com/Jackett/Jackett",
    tags: ["torrent", "indexer", "api"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "sonarr",
    name: "sonarr",
    displayName: "Sonarr",
    description: "Smart PVR for newsgroup and BitTorrent users",
    baseImage: "linuxserver/sonarr",
    category: "media",
    iconKey: "sonarr",
    defaultPort: 8989,
    defaultEnv: {
      PUID: "1000",
      PGID: "1000",
    },
    documentation: "https://wiki.servarr.com/sonarr",
    tags: ["media", "automation", "tv-shows"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "radarr",
    name: "radarr",
    displayName: "Radarr",
    description: "Movie collection manager for newsgroup and BitTorrent users",
    baseImage: "linuxserver/radarr",
    category: "media",
    iconKey: "radarr",
    defaultPort: 7878,
    defaultEnv: {
      PUID: "1000",
      PGID: "1000",
    },
    documentation: "https://wiki.servarr.com/radarr",
    tags: ["media", "automation", "movies"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "lidarr",
    name: "lidarr",
    displayName: "Lidarr",
    description: "Music collection manager for newsgroup and BitTorrent users",
    baseImage: "linuxserver/lidarr",
    category: "media",
    iconKey: "lidarr",
    defaultPort: 8686,
    defaultEnv: {
      PUID: "1000",
      PGID: "1000",
    },
    documentation: "https://wiki.servarr.com/lidarr",
    tags: ["media", "automation", "music"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "bazarr",
    name: "bazarr",
    displayName: "Bazarr",
    description: "Subtitle management for Sonarr and Radarr",
    baseImage: "linuxserver/bazarr",
    category: "media",
    iconKey: "bazarr",
    defaultPort: 6767,
    defaultEnv: {
      PUID: "1000",
      PGID: "1000",
    },
    documentation: "https://wiki.bazarr.media/",
    tags: ["media", "subtitles", "automation"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "plex",
    name: "plex",
    displayName: "Plex Media Server",
    description: "Stream movies, TV shows, and music to any device",
    baseImage: "plexinc/pms-docker",
    category: "media",
    iconKey: "plex",
    defaultPort: 32400,
    defaultEnv: {
      PLEX_CLAIM: "claim-token-here",
    },
    documentation: "https://support.plex.tv/",
    tags: ["media", "streaming", "entertainment"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "jellyfin",
    name: "jellyfin",
    displayName: "Jellyfin",
    description: "Free software media system that puts you in control",
    baseImage: "jellyfin/jellyfin",
    category: "media",
    iconKey: "jellyfin",
    defaultPort: 8096,
    defaultEnv: {},
    documentation: "https://jellyfin.org/docs/",
    tags: ["media", "streaming", "open-source"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "emby",
    name: "emby",
    displayName: "Emby",
    description: "Personal media server for streaming to devices",
    baseImage: "emby/embyserver",
    category: "media",
    iconKey: "emby",
    defaultPort: 8096,
    defaultEnv: {},
    documentation: "https://emby.media/support/",
    tags: ["media", "streaming", "server"],
    popular: true,
    complexity: "intermediate",
  },
  // Additional 30 services to reach 120 total
  {
    id: "clickhouse",
    name: "clickhouse",
    displayName: "ClickHouse",
    description: "Fast open-source column-oriented database",
    baseImage: "clickhouse/clickhouse-server",
    category: "database",
    iconKey: "clickhouse",
    defaultPort: 8123,
    additionalPorts: [9000], // Native TCP port
    defaultEnv: {},
    documentation: "https://clickhouse.com/docs/",
    tags: ["database", "analytics", "olap"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "cockroachdb",
    name: "cockroachdb",
    displayName: "CockroachDB",
    description:
      "Distributed SQL database built on a transactional and strongly-consistent key-value store",
    baseImage: "cockroachdb/cockroach",
    category: "database",
    iconKey: "cockroachdb",
    defaultPort: 26257,
    additionalPorts: [8080], // Admin UI
    defaultEnv: {},
    documentation: "https://www.cockroachlabs.com/docs/",
    tags: ["database", "distributed", "sql"],
    popular: true,
    complexity: "advanced",
  },
  {
    id: "dgraph",
    name: "dgraph",
    displayName: "Dgraph",
    description: "Fast, distributed, open source graph database",
    baseImage: "dgraph/dgraph",
    category: "database",
    iconKey: "dgraph",
    defaultPort: 8080,
    additionalPorts: [9080], // gRPC
    defaultEnv: {},
    documentation: "https://dgraph.io/docs/",
    tags: ["database", "graph", "distributed"],
    popular: true,
    complexity: "advanced",
  },
  {
    id: "neo4j",
    name: "neo4j",
    displayName: "Neo4j",
    description: "Leading graph database technology",
    baseImage: "neo4j",
    category: "database",
    iconKey: "neo4j",
    defaultPort: 7474,
    additionalPorts: [7687], // Bolt protocol
    defaultEnv: {
      NEO4J_AUTH: "neo4j/password",
    },
    documentation: "https://neo4j.com/docs/",
    tags: ["database", "graph", "nosql"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "arangodb",
    name: "arangodb",
    displayName: "ArangoDB",
    description: "Multi-model database for graph, document & key/value",
    baseImage: "arangodb",
    category: "database",
    iconKey: "arangodb",
    defaultPort: 8529,
    defaultEnv: {
      ARANGO_ROOT_PASSWORD: "password",
    },
    documentation: "https://www.arangodb.com/docs/",
    tags: ["database", "multi-model", "graph"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "scylladb",
    name: "scylladb",
    displayName: "ScyllaDB",
    description:
      "Real-time big data database that is API-compatible with Apache Cassandra",
    baseImage: "scylladb/scylla",
    category: "database",
    iconKey: "scylladb",
    defaultPort: 9042,
    defaultEnv: {},
    documentation: "https://docs.scylladb.com/",
    tags: ["database", "nosql", "cassandra"],
    popular: true,
    complexity: "advanced",
  },
  {
    id: "couchbase",
    name: "couchbase",
    displayName: "Couchbase",
    description: "Modern database for enterprise applications",
    baseImage: "couchbase",
    category: "database",
    iconKey: "couchbase",
    defaultPort: 8091,
    defaultEnv: {},
    documentation: "https://docs.couchbase.com/",
    tags: ["database", "nosql", "json"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "orientdb",
    name: "orientdb",
    displayName: "OrientDB",
    description: "Multi-model database combining graphs and documents",
    baseImage: "orientdb",
    category: "database",
    iconKey: "orientdb",
    defaultPort: 2424,
    additionalPorts: [2480], // HTTP
    defaultEnv: {
      ORIENTDB_ROOT_PASSWORD: "rootpwd",
    },
    documentation: "https://orientdb.org/docs/",
    tags: ["database", "multi-model", "graph"],
    popular: false,
    complexity: "intermediate",
  },
  {
    id: "questdb",
    name: "questdb",
    displayName: "QuestDB",
    description: "Fast SQL database for time series and analytics",
    baseImage: "questdb/questdb",
    category: "database",
    iconKey: "questdb",
    defaultPort: 9000,
    additionalPorts: [8812], // Postgres wire protocol
    defaultEnv: {},
    documentation: "https://questdb.io/docs/",
    tags: ["database", "timeseries", "analytics"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "victoriametrics",
    name: "victoriametrics",
    displayName: "VictoriaMetrics",
    description:
      "Fast, cost-effective monitoring solution and time series database",
    baseImage: "victoriametrics/victoria-metrics",
    category: "monitoring",
    iconKey: "victoriametrics",
    defaultPort: 8428,
    defaultEnv: {},
    documentation: "https://docs.victoriametrics.com/",
    tags: ["monitoring", "timeseries", "prometheus"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "loki",
    name: "loki",
    displayName: "Grafana Loki",
    description: "Like Prometheus, but for logs",
    baseImage: "grafana/loki",
    category: "monitoring",
    iconKey: "loki",
    defaultPort: 3100,
    defaultEnv: {},
    documentation: "https://grafana.com/docs/loki/",
    tags: ["logging", "monitoring", "grafana"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "tempo",
    name: "tempo",
    displayName: "Grafana Tempo",
    description: "High volume, minimal dependency distributed tracing backend",
    baseImage: "grafana/tempo",
    category: "monitoring",
    iconKey: "tempo",
    defaultPort: 3200,
    defaultEnv: {},
    documentation: "https://grafana.com/docs/tempo/",
    tags: ["tracing", "monitoring", "observability"],
    popular: true,
    complexity: "advanced",
  },
  {
    id: "otel-collector",
    name: "otel-collector",
    displayName: "OpenTelemetry Collector",
    description:
      "Vendor-agnostic implementation to receive, process and export telemetry data",
    baseImage: "otel/opentelemetry-collector",
    category: "monitoring",
    iconKey: "opentelemetry",
    defaultPort: 4317,
    additionalPorts: [4318], // HTTP
    defaultEnv: {},
    documentation: "https://opentelemetry.io/docs/collector/",
    tags: ["telemetry", "observability", "tracing"],
    popular: true,
    complexity: "advanced",
  },
  {
    id: "fluentd",
    name: "fluentd",
    displayName: "Fluentd",
    description:
      "Unified logging layer to collect, filter, buffer, and output logs",
    baseImage: "fluent/fluentd",
    category: "monitoring",
    iconKey: "fluentd",
    defaultPort: 24224,
    defaultEnv: {},
    documentation: "https://docs.fluentd.org/",
    tags: ["logging", "data-collection", "monitoring"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "logstash",
    name: "logstash",
    displayName: "Logstash",
    description: "Server-side data processing pipeline",
    baseImage: "docker.elastic.co/logstash/logstash",
    category: "monitoring",
    iconKey: "logstash",
    defaultPort: 5044,
    defaultEnv: {},
    documentation: "https://www.elastic.co/guide/en/logstash/",
    tags: ["logging", "data-processing", "elastic"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "kibana",
    name: "kibana",
    displayName: "Kibana",
    description:
      "Analytics and visualization platform designed to work with Elasticsearch",
    baseImage: "docker.elastic.co/kibana/kibana",
    category: "monitoring",
    iconKey: "kibana",
    defaultPort: 5601,
    defaultEnv: {},
    documentation: "https://www.elastic.co/guide/en/kibana/",
    tags: ["analytics", "visualization", "elastic"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "metabase",
    name: "metabase",
    displayName: "Metabase",
    description: "Business intelligence and analytics",
    baseImage: "metabase/metabase",
    category: "monitoring",
    iconKey: "metabase",
    defaultPort: 3000,
    defaultEnv: {},
    documentation: "https://www.metabase.com/docs/",
    tags: ["analytics", "business-intelligence", "visualization"],
    popular: true,
    complexity: "beginner",
  },
  {
    id: "superset",
    name: "superset",
    displayName: "Apache Superset",
    description: "Modern data exploration and visualization platform",
    baseImage: "apache/superset",
    category: "monitoring",
    iconKey: "apachesuperset",
    defaultPort: 8088,
    defaultEnv: {},
    documentation: "https://superset.apache.org/",
    tags: ["analytics", "visualization", "apache"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "airbyte",
    name: "airbyte",
    displayName: "Airbyte",
    description: "Open-source data integration platform",
    baseImage: "airbyte/webapp",
    category: "development",
    iconKey: "airbyte",
    defaultPort: 8000,
    defaultEnv: {},
    documentation: "https://docs.airbyte.com/",
    tags: ["data-integration", "etl", "data-pipeline"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "prefect",
    name: "prefect",
    displayName: "Prefect",
    description: "Modern workflow orchestration framework",
    baseImage: "prefecthq/prefect",
    category: "development",
    iconKey: "prefect",
    defaultPort: 4200,
    defaultEnv: {},
    documentation: "https://docs.prefect.io/",
    tags: ["workflow", "orchestration", "python"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "airflow",
    name: "airflow",
    displayName: "Apache Airflow",
    description:
      "Platform to programmatically author, schedule and monitor workflows",
    baseImage: "apache/airflow",
    category: "development",
    iconKey: "apacheairflow",
    defaultPort: 8080,
    defaultEnv: {},
    documentation: "https://airflow.apache.org/docs/",
    tags: ["workflow", "orchestration", "apache"],
    popular: true,
    complexity: "advanced",
  },
  {
    id: "dagster",
    name: "dagster",
    displayName: "Dagster",
    description: "Data orchestrator for machine learning, analytics, and ETL",
    baseImage: "dagster/dagster-celery-docker",
    category: "development",
    iconKey: "dagster",
    defaultPort: 3000,
    defaultEnv: {},
    documentation: "https://docs.dagster.io/",
    tags: ["data-orchestration", "etl", "ml"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "dbt",
    name: "dbt",
    displayName: "dbt (data build tool)",
    description: "Transform data in your warehouse using SQL",
    baseImage: "fishtownanalytics/dbt",
    category: "development",
    iconKey: "dbt",
    defaultPort: 8080,
    defaultEnv: {},
    documentation: "https://docs.getdbt.com/",
    tags: ["data-transformation", "sql", "analytics"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "n8n",
    name: "n8n",
    displayName: "n8n",
    description:
      "Free and source-available fair-code licensed workflow automation tool",
    baseImage: "n8nio/n8n",
    category: "development",
    iconKey: "n8n",
    defaultPort: 5678,
    defaultEnv: {},
    documentation: "https://docs.n8n.io/",
    tags: ["workflow", "automation", "no-code"],
    popular: true,
    complexity: "beginner",
  },
  {
    id: "nodered",
    name: "nodered",
    displayName: "Node-RED",
    description:
      "Flow-based programming tool for wiring together hardware devices, APIs and online services",
    baseImage: "nodered/node-red",
    category: "development",
    iconKey: "nodered",
    defaultPort: 1880,
    defaultEnv: {},
    documentation: "https://nodered.org/docs/",
    tags: ["automation", "iot", "flow-programming"],
    popular: true,
    complexity: "beginner",
  },
  {
    id: "nocodb",
    name: "nocodb",
    displayName: "NocoDB",
    description: "Open source Airtable alternative",
    baseImage: "nocodb/nocodb",
    category: "development",
    iconKey: "nocodb",
    defaultPort: 8080,
    defaultEnv: {},
    documentation: "https://docs.nocodb.com/",
    tags: ["database", "no-code", "airtable"],
    popular: true,
    complexity: "beginner",
  },
  {
    id: "strapi",
    name: "strapi",
    displayName: "Strapi",
    description: "Open-source headless CMS",
    baseImage: "strapi/strapi",
    category: "web",
    iconKey: "strapi",
    defaultPort: 1337,
    defaultEnv: {},
    documentation: "https://docs.strapi.io/",
    tags: ["cms", "headless", "api"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "supabase",
    name: "supabase",
    displayName: "Supabase",
    description: "Open source Firebase alternative",
    baseImage: "supabase/postgres",
    category: "web",
    iconKey: "supabase",
    defaultPort: 3000,
    defaultEnv: {},
    documentation: "https://supabase.com/docs/",
    tags: ["backend-as-a-service", "firebase", "api"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "hasura",
    name: "hasura",
    displayName: "Hasura",
    description: "Instant GraphQL APIs on your data",
    baseImage: "hasura/graphql-engine",
    category: "web",
    iconKey: "hasura",
    defaultPort: 8080,
    defaultEnv: {},
    documentation: "https://hasura.io/docs/",
    tags: ["graphql", "api", "backend"],
    popular: true,
    complexity: "intermediate",
  },
  {
    id: "yugabytedb",
    name: "yugabytedb",
    displayName: "YugabyteDB",
    description: "Distributed SQL database",
    baseImage: "yugabytedb/yugabyte",
    category: "database",
    iconKey: "yugabytedb",
    defaultPort: 5433,
    additionalPorts: [7000], // Master server RPC port
    defaultEnv: {},
    documentation: "https://docs.yugabyte.com/",
    tags: ["database", "distributed", "sql"],
    popular: true,
    complexity: "advanced",
  },
];

// Get core template by ID
export function getCoreTemplate(
  id: string
): EnhancedServiceTemplate | undefined {
  return CORE_TEMPLATES.find((template) => template.id === id);
}

// Get core templates by category
export function getCoreTemplatesByCategory(
  category: string
): EnhancedServiceTemplate[] {
  if (category === "all") return CORE_TEMPLATES;
  return CORE_TEMPLATES.filter((template) => template.category === category);
}

// Search core templates
export function searchCoreTemplates(query: string): EnhancedServiceTemplate[] {
  const searchTerm = query.toLowerCase();
  return CORE_TEMPLATES.filter(
    (template) =>
      template.displayName.toLowerCase().includes(searchTerm) ||
      template.description.toLowerCase().includes(searchTerm) ||
      template.tags.some((tag) => tag.toLowerCase().includes(searchTerm))
  );
}
