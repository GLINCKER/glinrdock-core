# Server block for {{.Route.Domain}}
{{- $route := .Route }}
{{- $cert := .Cert }}
upstream svc_{{$route.ServiceID}}_{{$route.Port}} {
    server {{$route.ServiceName}}:{{$route.Port}};
}

server {
    listen 80;
    {{- if $route.TLS}}
    listen 443 ssl http2;
    {{- end}}
    server_name {{$route.Domain}};

    # ACME HTTP-01 challenge location (always present for certificate issuance)
    location ^~ /.well-known/acme-challenge/ {
        root /var/lib/glinr/acme-http01;
        try_files $uri =404;
    }

    {{- if $route.TLS}}
    {{- if $cert}}
    # SSL certificate configuration
    ssl_certificate /etc/nginx/certs/{{$route.Domain}}.crt;
    ssl_certificate_key /etc/nginx/certs/{{$route.Domain}}.key;
    {{- if ne $cert.PEMChain nil}}
    ssl_trusted_certificate /etc/nginx/certs/{{$route.Domain}}.chain.crt;
    {{- end}}
    
    # SSL security configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers for HTTPS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # HTTP to HTTPS redirect for non-ACME requests
    if ($scheme = http) {
        return 301 https://$server_name$request_uri;
    }
    {{- else}}
    # Certificate not found for {{$route.Domain}} - serve 503 for HTTPS requests
    if ($scheme = https) {
        return 503;
    }
    {{- end}}
    {{- end}}

    # Standard proxy headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $server_name;
    proxy_set_header X-Forwarded-Port $server_port;

    # Proxy configuration
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
    proxy_redirect off;

    {{- if $route.Path}}
    location {{$route.Path}} {
        proxy_pass http://svc_{{$route.ServiceID}}_{{$route.Port}};
        {{- if $route.ProxyConfig}}
        # Custom proxy configuration
        # {{$route.ProxyConfig}}
        {{- end}}
    }
    {{- else}}
    location / {
        proxy_pass http://svc_{{$route.ServiceID}}_{{$route.Port}};
        {{- if $route.ProxyConfig}}
        # Custom proxy configuration  
        # {{$route.ProxyConfig}}
        {{- end}}
    }
    {{- end}}
}