# Default GLINRDOCK configuration
server {
    listen 80;
    server_name _;
    
    # Let's Encrypt challenge location  
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Redirect all other traffic to HTTPS (will be overridden by domain configs)
    location / {
        return 301 https://$host$request_uri;
    }
}

# Default HTTPS configuration (template)
server {
    listen 443 ssl http2;
    server_name _;
    
    # Default self-signed certificates (will be replaced by Let's Encrypt)
    ssl_certificate /etc/nginx/certs/default.crt;
    ssl_certificate_key /etc/nginx/certs/default.key;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    
    # Rate limiting for API calls
    location /v1/ {
        limit_req zone=api burst=20 nodelay;
        proxy_pass http://glinrdock:8080;
        include /etc/nginx/proxy_params;
    }
    
    # Rate limiting for login
    location /v1/auth/login {
        limit_req zone=login burst=5 nodelay;
        proxy_pass http://glinrdock:8080;
        include /etc/nginx/proxy_params;
    }
    
    # WebSocket support for logs and real-time updates
    location /ws/ {
        proxy_pass http://glinrdock:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
    }
    
    # Main application
    location / {
        proxy_pass http://glinrdock:8080;
        include /etc/nginx/proxy_params;
    }
}