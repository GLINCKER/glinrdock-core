version: '3.8'

services:
  glinrdock:
    build: 
      context: .
      dockerfile: Dockerfile.controller
      args:
        - CGO_ENABLED=1
    restart: unless-stopped
    environment:
      - DATA_DIR=/app/data
      - HTTP_ADDR=:8080
      - NGINX_PROXY_ENABLED=true
      - LOG_LEVEL=info
      - GIN_MODE=release
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/app/certs:ro
      - ./nginx/generated:/app/nginx:rw
    networks:
      - glinrdock
      - spring-apps
    ports:
      - "127.0.0.1:8080:8080"
    depends_on:
      - nginx
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  nginx:
    image: nginx:1.25-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/generated:/etc/nginx/glinrdock:ro
      - ./certs:/etc/nginx/certs:ro
      - ./nginx/cache:/var/cache/nginx:rw
      - ./nginx/logs:/var/log/nginx:rw
      - ./certbot-webroot:/var/www/certbot:ro
    networks:
      - glinrdock
      - spring-apps
    depends_on:
      - certbot
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: >
      /bin/sh -c "
      # Create cache directories
      mkdir -p /var/cache/nginx/client_temp /var/cache/nginx/proxy_temp /var/cache/nginx/fastcgi_temp /var/cache/nginx/uwsgi_temp /var/cache/nginx/scgi_temp;
      # Start nginx
      nginx -g 'daemon off;'
      "

  certbot:
    image: certbot/certbot:v2.7.4
    restart: "no"
    volumes:
      - ./certs:/etc/letsencrypt:rw
      - ./certbot-webroot:/var/www/certbot:rw
      - ./nginx/logs:/var/log/letsencrypt:rw
    networks:
      - glinrdock
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --quiet; sleep 12h & wait $${!}; done;'"
    
  # Watchtower for automatic updates (optional)
  watchtower:
    image: containrrr/watchtower:latest
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=86400  # Check daily
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_REVIVE_STOPPED=false
    networks:
      - glinrdock
    profiles:
      - watchtower  # Only start with --profile watchtower

networks:
  glinrdock:
    driver: bridge
    name: glinrdock_network
    ipam:
      config:
        - subnet: 172.20.0.0/16
  
  # Network for deployed Spring Boot applications
  spring-apps:
    driver: bridge
    name: spring_apps_network  
    ipam:
      config:
        - subnet: 172.21.0.0/16

volumes:
  glinrdock-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data
  
  nginx-cache:
    driver: local
    driver_opts:
      type: none  
      o: bind
      device: ./nginx/cache
      
  nginx-logs:
    driver: local
    driver_opts:
      type: none
      o: bind  
      device: ./nginx/logs